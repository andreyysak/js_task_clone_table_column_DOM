{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAIQ,EAYA,EAhBsB,E,A,S,C,E,G,M,O,C,G,O,C,E,EAAA,AADhB,SAAS,aAAa,CAAC,SACD,QAAQ,G,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,AAAA,I,E,M,E,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,EAAA,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,EAAA,G,E,EAAA,I,A,W,M,A,U,6I,IAArC,EAAuB,CAAA,CAAA,EAAA,CAAhB,EAAgB,CAAA,CAAA,EAAA,CAAT,EAAS,CAA9B,CAAA,EAAA,CAIQ,EAAgB,AADH,EAAM,gBAAgB,CAAC,KAAK,CAkBrC,EAlBkD,CAC3B,SAAS,CAAC,CAAA,GAE3C,EAAM,aAAa,CAAC,MAAM,WAAW,CAAC,GAEtC,EAAM,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAtC,EAEE,IAAM,EAAU,AADH,EAAI,gBAAgB,CAAC,KAAK,CAY/B,EAZ4C,CAC/B,SAAS,CAAC,CAAA,GAE/B,EAAI,WAAW,CAAC,EAClB,GAGM,EAAgB,AADH,EAAM,gBAAgB,CAAC,KAAK,CAMrC,EANkD,CAC3B,SAAS,CAAC,CAAA,GAE3C,EAAM,aAAa,CAAC,MAAM,WAAW,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar _table_children = _sliced_to_array(table.children, 3), thead = _table_children[0], tbody = _table_children[1], tfoot = _table_children[2];\nfunction cloneColumn(columnIndex) {\n    var headerCell = thead.querySelectorAll(\"th\")[columnIndex];\n    var newHeaderCell = headerCell.cloneNode(true);\n    thead.querySelector(\"tr\").appendChild(newHeaderCell);\n    tbody.querySelectorAll(\"tr\").forEach(function(row) {\n        var cell = row.querySelectorAll(\"td\")[columnIndex];\n        var newCell = cell.cloneNode(true);\n        row.appendChild(newCell);\n    });\n    var footerCell = tfoot.querySelectorAll(\"th\")[columnIndex];\n    var newFooterCell = footerCell.cloneNode(true);\n    tfoot.querySelector(\"tr\").appendChild(newFooterCell);\n}\ncloneColumn(1);\n\n//# sourceMappingURL=index.175dc9f2.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst [thead, tbody, tfoot] = table.children;\n\nfunction cloneColumn(columnIndex) {\n  const headerCell = thead.querySelectorAll('th')[columnIndex];\n  const newHeaderCell = headerCell.cloneNode(true);\n\n  thead.querySelector('tr').appendChild(newHeaderCell);\n\n  tbody.querySelectorAll('tr').forEach((row) => {\n    const cell = row.querySelectorAll('td')[columnIndex];\n    const newCell = cell.cloneNode(true);\n\n    row.appendChild(newCell);\n  });\n\n  const footerCell = tfoot.querySelectorAll('th')[columnIndex];\n  const newFooterCell = footerCell.cloneNode(true);\n\n  tfoot.querySelector('tr').appendChild(newFooterCell);\n}\n\ncloneColumn(1);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","newHeaderCell","newFooterCell","_table_children","_array_with_holes","isArray","table","document","querySelector","children","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","push","value","err","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","_non_iterable_rest","TypeError","thead","tbody","tfoot","headerCell","querySelectorAll","cloneNode","appendChild","forEach","row","newCell","cell","footerCell"],"version":3,"file":"index.175dc9f2.js.map"}